" You can enable the existing layers in space-vim and
" exclude the partial plugins in a certain layer.
" The command Layer is vaild in the function Layers().
" Use exclude option if you don't want the full Layer,
" e.g., Layer 'better-defaults', { 'exclude': 'itchyny/vim-cursorword' }
function! Layers()

    " Default layers, recommended!
    Layer 'fzf'
    Layer 'unite'
    Layer 'better-defaults', { 'exclude': 'itchyny/vim-cursorword' }

    Layer 'lightline'

    "Layer 'syntax-checking'
    Layer 'markdown'
    Layer 'html'

    Layer 'git'
    "Layer 'text-align'
    " Layer 'programming'

    "Plug 'hecal3/vim-leader-guide'

endfunction

" Put your private plugins here.
function! UserInit()

    " Space has been set as the default leader key,
    " if you want to change it, uncomment and set it here.
    " let g:spacevim_leader = "<\Space>"
    " let g:spacevim_localleader = ','

    " Install private plugins
    " Plug 'extr0py/oni'

    Plug 'dag/vim-fish'
    Plug 'flazz/vim-colorschemes'

endfunction

" Put your costom configurations here, e.g., change the colorscheme.
function! UserConfig()

    color PaperColor
    set background=light

    if &shell =~# 'fish$'
        set shell=sh
    endif

    " >>> LightLine config
    let g:lightline = {
        \ 'colorscheme': 'PaperColor_light',
        \ 'active': {
        \   'left': [ [ 'mode', 'paste' ],
        \             [ 'fugitive', 'filename', 'modified' ] ]
        \ },
        \ 'component_function': {
        \   'fugitive': 'LightlineFugitive',
        \   'readonly': 'LightlineReadonly',
        \   'modified': 'LightlineModified',
        \   'filename': 'LightlineFilename'
        \ },
        \ 'separator': { 'left': '', 'right': '' },
        \ 'subseparator': { 'left': 'â¦š', 'right': 'â¦š' }
        \ }

    function! LightlineModified()
        if &filetype == "help"
            return ""
        elseif &modified
            return "+"
        elseif &modifiable
            return ""
        else
            return ""
        endif
    endfunction

    function! LightlineReadonly()
        if &filetype == "help"
            return ""
        elseif &readonly
            return "ðŸ”’"
        else
            return ""
        endif
    endfunction

    function! LightlineFugitive()
        return exists('*fugitive#head') ? fugitive#head() : ''
    endfunction

    function! LightlineFilename()
        return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
            \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
            \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
    endfunction
    " <<< LightLine config

    if (has("termguicolors"))
        set termguicolors
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    endif

endfunction
